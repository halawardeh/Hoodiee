// <auto-generated />
using System;
using Hoodie.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hoodie.Migrations
{
    [DbContext(typeof(HoodieContext))]
    [Migration("20250425181121_AddOrderItemModel")]
    partial class AddOrderItemModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hoodie.Models.Cart", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("UserId", "ProductId")
                        .HasName("PK__Cart__794B11CB1B403B44");

                    b.HasIndex("ProductId");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("Hoodie.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("categoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("storeID");

                    b.HasKey("CategoryId")
                        .HasName("PK__Category__23CAF1F805198F04");

                    b.HasIndex("StoreId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("Hoodie.Models.Checkout", b =>
                {
                    b.Property<int>("CheckoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CheckoutID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CheckoutId"));

                    b.Property<DateTime?>("CheckoutDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("CheckoutId")
                        .HasName("PK__Checkout__E07EF51C289CE5AA");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Checkout", (string)null);
                });

            modelBuilder.Entity("Hoodie.Models.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ColorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<string>("HexCode")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ColorId")
                        .HasName("PK__Colors__8DA7676DB91E00AE");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("Hoodie.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discountID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("discountPercentage");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("endDate");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productID");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("startDate");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("storeID");

                    b.HasKey("DiscountId")
                        .HasName("PK__Discount__D2130A066911974C");

                    b.HasIndex("StoreId");

                    b.HasIndex(new[] { "ProductId" }, "UQ__Discount__2D10D14B5E9365BE")
                        .IsUnique()
                        .HasFilter("[productID] IS NOT NULL");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Hoodie.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Messagee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Messages__3214EC075B5693B0");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Hoodie.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notificationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit")
                        .HasColumnName("isRead");

                    b.Property<string>("Message")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("message");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__4BA5CE89B84C16E6");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Hoodie.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateOnly?>("OrderDate")
                        .HasColumnType("date")
                        .HasColumnName("orderDate");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("totalAmount");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__0809337DBCBB997F");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Hoodie.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Hoodie.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("productID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<bool?>("Availability")
                        .HasColumnType("bit")
                        .HasColumnName("availability");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryID");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal?>("OldPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("oldPrice");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int?>("Solds")
                        .HasColumnType("int")
                        .HasColumnName("solds");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("storeID");

                    b.HasKey("ProductId")
                        .HasName("PK__Product__2D10D14A2E1C1E56");

                    b.HasIndex("CategoryId");

                    b.HasIndex("StoreId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Hoodie.Models.ProductColor", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productID");

                    b.Property<int>("ColorId")
                        .HasColumnType("int")
                        .HasColumnName("ColorID");

                    b.Property<string>("Additional")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("ProductId", "ColorId")
                        .HasName("PK__ProductC__E5CAA73C19CAA75C");

                    b.HasIndex("ColorId");

                    b.ToTable("ProductColors");
                });

            modelBuilder.Entity("Hoodie.Models.ProductSize", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productID");

                    b.Property<int>("SizeId")
                        .HasColumnType("int")
                        .HasColumnName("SizeID");

                    b.Property<string>("Additional")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("ProductId", "SizeId")
                        .HasName("PK__ProductS__952B01DFB20826A6");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductSizes");
                });

            modelBuilder.Entity("Hoodie.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reviewID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("comment");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int?>("HelpfulNumber")
                        .HasColumnType("int")
                        .HasColumnName("helpfulNumber");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productID");

                    b.Property<int?>("Stars")
                        .HasColumnType("int")
                        .HasColumnName("stars");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.HasKey("ReviewId")
                        .HasName("PK__Review__2ECD6E24A3BFE699");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("Hoodie.Models.Size", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SizeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SizeId"));

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SizeId")
                        .HasName("PK__Sizes__83BD095A1025EED1");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("Hoodie.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("storeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("ownerID");

                    b.HasKey("StoreId")
                        .HasName("PK__Store__1EA7163329F0307C");

                    b.HasIndex("OwnerId");

                    b.ToTable("Store", (string)null);
                });

            modelBuilder.Entity("Hoodie.Models.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__SubCateg__3214EC07B0E31BD8");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("Hoodie.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tagID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("TagId")
                        .HasName("PK__Tag__50FC017757DDB5E9");

                    b.ToTable("Tag", (string)null);
                });

            modelBuilder.Entity("Hoodie.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateOnly?>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("birthday");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Fname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fname");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gender");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Lname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lname");

                    b.Property<string>("Password")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phonenumber");

                    b.Property<string>("UserType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("userType");

                    b.HasKey("UserId")
                        .HasName("PK__Users__CB9A1CDF05027739");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Hoodie.Models.Wishlist", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productID");

                    b.Property<DateTime?>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("UserId", "ProductId")
                        .HasName("PK__Wishlist__794B11CB3AA3949B");

                    b.HasIndex("ProductId");

                    b.ToTable("Wishlist", (string)null);
                });

            modelBuilder.Entity("ProductTag", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productID");

                    b.Property<int>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("tagID");

                    b.HasKey("ProductId", "TagId")
                        .HasName("PK__ProductT__481F115D75369931");

                    b.HasIndex("TagId");

                    b.ToTable("ProductTag", (string)null);
                });

            modelBuilder.Entity("Hoodie.Models.Cart", b =>
                {
                    b.HasOne("Hoodie.Models.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Cart__productID__47DBAE45");

                    b.HasOne("Hoodie.Models.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Cart__userID__46E78A0C");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hoodie.Models.Category", b =>
                {
                    b.HasOne("Hoodie.Models.Store", "Store")
                        .WithMany("Categories")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK__Category__storeI__3C69FB99");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Hoodie.Models.Checkout", b =>
                {
                    b.HasOne("Hoodie.Models.Order", "Order")
                        .WithMany("Checkouts")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_Checkout_Orders");

                    b.HasOne("Hoodie.Models.User", "User")
                        .WithMany("Checkouts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Checkout_Users");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hoodie.Models.Discount", b =>
                {
                    b.HasOne("Hoodie.Models.Product", "Product")
                        .WithOne("Discount")
                        .HasForeignKey("Hoodie.Models.Discount", "ProductId")
                        .HasConstraintName("FK__Discounts__produ__59FA5E80");

                    b.HasOne("Hoodie.Models.Store", "Store")
                        .WithMany("Discounts")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK__Discounts__store__59063A47");

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Hoodie.Models.Notification", b =>
                {
                    b.HasOne("Hoodie.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Notificat__userI__5CD6CB2B");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hoodie.Models.Order", b =>
                {
                    b.HasOne("Hoodie.Models.Product", null)
                        .WithMany("Orders")
                        .HasForeignKey("ProductId");

                    b.HasOne("Hoodie.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Orders__userID__4AB81AF0");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hoodie.Models.OrderItem", b =>
                {
                    b.HasOne("Hoodie.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoodie.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Hoodie.Models.Product", b =>
                {
                    b.HasOne("Hoodie.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Product__categor__403A8C7D");

                    b.HasOne("Hoodie.Models.Store", "Store")
                        .WithMany("Products")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK__Product__storeID__3F466844");

                    b.Navigation("Category");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Hoodie.Models.ProductColor", b =>
                {
                    b.HasOne("Hoodie.Models.Color", "Color")
                        .WithMany("ProductColors")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductColors_Colors");

                    b.HasOne("Hoodie.Models.Product", "Product")
                        .WithMany("ProductColors")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductColors_Product");

                    b.Navigation("Color");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Hoodie.Models.ProductSize", b =>
                {
                    b.HasOne("Hoodie.Models.Product", "Product")
                        .WithMany("ProductSizes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductSizes_Products");

                    b.HasOne("Hoodie.Models.Size", "Size")
                        .WithMany("ProductSizes")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductSizes_Sizes");

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Hoodie.Models.Review", b =>
                {
                    b.HasOne("Hoodie.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Review__productI__4F7CD00D");

                    b.HasOne("Hoodie.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Review__userID__4E88ABD4");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hoodie.Models.Store", b =>
                {
                    b.HasOne("Hoodie.Models.User", "Owner")
                        .WithMany("Stores")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("FK__Store__ownerID__398D8EEE");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Hoodie.Models.SubCategory", b =>
                {
                    b.HasOne("Hoodie.Models.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__SubCatego__Categ__6FE99F9F");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Hoodie.Models.Wishlist", b =>
                {
                    b.HasOne("Hoodie.Models.Product", "Product")
                        .WithMany("Wishlists")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Wishlist__produc__440B1D61");

                    b.HasOne("Hoodie.Models.User", "User")
                        .WithMany("Wishlists")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Wishlist__userID__4316F928");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProductTag", b =>
                {
                    b.HasOne("Hoodie.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductTa__produ__5441852A");

                    b.HasOne("Hoodie.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductTa__tagID__5535A963");
                });

            modelBuilder.Entity("Hoodie.Models.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Hoodie.Models.Color", b =>
                {
                    b.Navigation("ProductColors");
                });

            modelBuilder.Entity("Hoodie.Models.Order", b =>
                {
                    b.Navigation("Checkouts");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Hoodie.Models.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Discount");

                    b.Navigation("Orders");

                    b.Navigation("ProductColors");

                    b.Navigation("ProductSizes");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("Hoodie.Models.Size", b =>
                {
                    b.Navigation("ProductSizes");
                });

            modelBuilder.Entity("Hoodie.Models.Store", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Discounts");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Hoodie.Models.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Checkouts");

                    b.Navigation("Notifications");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Stores");

                    b.Navigation("Wishlists");
                });
#pragma warning restore 612, 618
        }
    }
}
